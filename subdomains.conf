
##
# You should look at the following URL's in order to grasp a solid understanding
# of Nginx configuration files in order to fully unleash the power of Nginx.
# https://www.nginx.com/resources/wiki/start/
# https://www.nginx.com/resources/wiki/start/topics/tutorials/config_pitfalls/
# https://wiki.debian.org/Nginx/DirectoryStructure
#
# In most cases, administrators will remove this file from sites-enabled/ and
# leave it as reference inside of sites-available where it will continue to be
# updated by the nginx packaging team.
#
# This file will automatically load configuration files provided by other
# applications, such as Drupal or Wordpress. These applications will be made
# available underneath a path with that package name, such as /drupal8.
#
# Please see /usr/share/doc/nginx-doc/examples/ for more detailed examples.
##

# Default server configuration
#

upstream app_frontend {
    server 127.0.0.1:8000;
}

upstream app_auth{
    server 127.0.0.1:8001;
}

upstream app_api{
    server 127.0.0.1:4343;
}

server {
  listen 80;
  listen [::]:80 default_server ipv6only=on;
  return 301 https://$host$request_uri;
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name timwoods.dev www.timwoods.dev;
  server_name_in_redirect off;
    ssl_certificate /etc/letsencrypt/live/timwoods.dev/fullchain.pem; # managed by Certbot
    ssl_certificate_key /etc/letsencrypt/live/timwoods.dev/privkey.pem; # managed by Certbot

  include snippets/ssl-params.conf;

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://app_frontend;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    try_files $uri $uri/ /index.html;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name api.timwoods.dev;
  server_name_in_redirect off;
  ssl_certificate /etc/letsencrypt/live/timwoods.dev/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/timwoods.dev/privkey.pem; # managed by Certbot
  include snippets/ssl-params.conf;
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot

  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://app_api;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    try_files $uri $uri/ /index.html;
  }
}

server {
  listen 443 ssl http2;
  listen [::]:443 ssl http2;
  server_name auth.timwoods.dev;
  server_name_in_redirect off;
  ssl_certificate /etc/letsencrypt/live/timwoods.dev/fullchain.pem; # managed by Certbot
  ssl_certificate_key /etc/letsencrypt/live/timwoods.dev/privkey.pem; # managed by Certbot
  include /etc/letsencrypt/options-ssl-nginx.conf; # managed by Certbot
  ssl_dhparam /etc/letsencrypt/ssl-dhparams.pem; # managed by Certbot


  location / {
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-NginX-Proxy true;
    proxy_pass http://app_auth;
    proxy_ssl_session_reuse off;
    proxy_set_header Host $http_host;
    proxy_cache_bypass $http_upgrade;
    proxy_redirect off;
    try_files $uri $uri/ /index.html;
  }
}

server {
    if ($host = auth.timwoods.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


    if ($host = api.timwoods.dev) {
        return 301 https://$host$request_uri;
    } # managed by Certbot


  listen 80;
  listen [::]:80  ;
    server_name api.timwoods.dev auth.timwoods.dev;
    return 404; # managed by Certbot
}
